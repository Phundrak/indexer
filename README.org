#+title: Indexer

* Introduction
This project is a simple indexer for French text in plaintext for now,
richer text later. Hopefully this will eventually support reading
formats such as ~.docx~, ~.odt~, ~.pdf~, and so on.

This project is a university assignment for my /Computer and Web
Techniques/ (/Techniques Informatiques et Web/).

* Usage
This repository has a total of three different programs:
- ~indexer~ :: The indexer itself
- ~compile_glaff~ :: A utility tool to compile the GLÀFF to a binary
  format used by /Indexer/
- ~spelling_trainer~ :: A utility tool to train the spellchecker used in
  /Indexer/

The usage of the latter two is optional, but if used, they must be
executed before running ~indexer~.

** Files the project may depend on
*** Stop word
Stop words, also known as empty words, are words that are considered
as semantically insighificant. They are therefore words that should be
filtered out when processing any work related to natural language data
processing.

The input file should be a plain text file with each line containing
one and only one stop word.

*This file is required for the project to work.*

*** GLÀFF
The GLÀFF is a document compiling nearly one million and a half French
words as well as their lemme and other information. It is a CSV
document that can be found [[http://redac.univ-tlse2.fr/lexiques/glaff.html][here]] along with some documentation.

This file is *not required* for the project to work. If you plan on
indexing documents in any other language than French, I discourage you
from using its related features.

*** Dictionary corpus
The indexer has a spell-checking feature which implementation is
inspired by [[http://norvig.com/spell-correct.html][this article]]. It therefore requires a large amount of text
in the target language in order to be trained properly. I personally
used books from the [[https://www.gutenberg.org/][Project Gutenberg]] in French.

This is not necessarily a single file but a directory containing the
input files.

This is *not required* for the project to work if you do not plan on
using its spellchecking features.

** Compiling the GLÀFF
In order to compile the GLÀFF, you can run the following command at
the root of the project:
#+begin_src shell
$ cargo run --bin compile_glaff --release -- -o glaff.bin path/to/the/glaff.csv
#+end_src

This will output a ~glaff.bin~ file in the root of the project which you
can use later in the indexer. In my case, it compiles to a 41MB binary
file.

** Training the dictionary
You can run the utility this way:
#+begin_src shell
$ cargo run --bin spelling_trainer --release -- \
  -s path/to/stopwords.txt \
  -o dict.bin \
  path/to/your/corpus/
#+end_src

This will output a ~dict.bin~ file which you can use later in the
indexer. In my case, a 43.8MiB input corpus resulted in a 2.9MB
dictionary.

** Running the project
You can run the project with the following command. It will also
compile the project if you haven’t done so already.
#+begin_src shell
$ cargo run -- USER_OPTIONS # debug version
$ cargo run --release -- USER_OPTIONS # release version
#+end_src

If you already compiled the project manually, you can run it with the
following commands.
#+begin_src shell
$ ./target/debug/indexer USER_OPTIONS # if you compiled the debug version
$ ./target/release/indexer USER_OPTIONS # if you compiled the release version
#+end_src

To get a list of options supported by the program, you can use the ~-h~
or ~--help~ flag. Here is its output:
#+begin_src text
indexer 0.2.0

USAGE:
    indexer [OPTIONS] --stop-words <stop-words>

FLAGS:
    -h, --help       Prints help information
    -V, --version    Prints version information

OPTIONS:
    -d, --dictionary <dictionary>    Path to the binary version of the dictionary (optional)
    -g, --glaff <glaff>              Path to the binary version of the GLÀFF (optional)
    -s, --stop-words <stop-words>    Path to a list of stop words to ignore
#+end_src

** Features
Indexer currently supports reading from a directory in which plaintext
files are stored. By default, words of two characters or less are
ignored, including those only separated by a punctiation mark from
other words (such as apostrophes).

If specified, a list of stop words can be used to ignore words in the
documents analyzed.

For documents in French, the GLÀFF can be used in order to normalize
words from their plural/feminine/conjugated form to their standard
lemma.

** API
More details soon.

* Roadmap
See the [[file:TODOs.org][TODOs]] file.

* License
This repository is licensed under the GPL-3.0 license. You can find
the full text in the file [[file:LICENSE][LICENSE]].

The file [[file:input/stopwords.txt][stopwords.txt]] is the result of merging the French, English,
Spanish, Italian, Portuguese, and German stopword lists from the
[[http://members.unine.ch/jacques.savoy/clef/index.html][Université de Neuchâtel]]. It is not covered by the repository’s license
but by the BSD License. See their homepage.

This program can be used with GLÀFF in order to further reduce the
amount of keywords found in a document. GLÀFF is released by the
Université Toulouse 2 on [[http://redac.univ-tlse2.fr/lexiques/glaff.html][this webpage]] under the [[https://creativecommons.org/licenses/by-sa/3.0/][CC-BY-SA-3.0 license]]
and is not covered by the license of this repository.
